@model ShopDGHouse.Models.Product
@using ShopDGHouse.Models
@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    int stt = 1;
    DoAn db = new DoAn();
    var productImage = db.ProductImages.Where(s => s.ProductId == Model.Id).ToList();
}
@section naviheader{
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/home" class="nav-link">Home</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/products" class="nav-link">Sản phẩm</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="#" class="nav-link">Cập nhật</a>
        </li>
    </ul>
}

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Cập nhật Products</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/admin/products">Products</a></li>
                    <li class="breadcrumb-item active">Cập nhật</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>
<!-- Main content -->
<section class="content">

    <!-- Default box -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Thông tin cập nhật Products</h3>

        </div>
        <div class="card-body">
            <div class="bs-stepper-content">

                <!-- your steps content here -->
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4">
                            @using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true)
                                <div class="tab-content">
                                    <div class="tab-pane active" id="activity">
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Tên sản phẩm</label>
                                            @Html.TextBoxFor(x => x.ProductName, new { @class = "form-control", @placeholder = "Tên sản phẩm" })
                                            @Html.ValidationMessageFor(x => x.ProductName, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Giá</label>
                                            @Html.TextBoxFor(x => x.Price, new { @class = "form-control", @placeholder = "Giá", @type = "number" })
                                            @Html.ValidationMessageFor(x => x.Price, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Số lượng</label>
                                            @Html.TextBoxFor(x => x.Quantity, new { @class = "form-control", @placeholder = "Số lượng", @type = "number" })
                                            @Html.ValidationMessageFor(x => x.Quantity, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Danh mục sản phẩm</label>
                                            @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Chọn Thương Hiệu</label>
                                            @Html.DropDownList("BrandId", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="form-group">
                                            <label for="exampleInputPassword1">Mô tả</label>
                                            @Html.TextAreaFor(x => x.Describe, new
        {
            @class = "form-control"})
             @Html.ValidationMessageFor(model => model.Describe, "", new { @class = "text-danger" })
                                            @*@Html.EditorFor(model => model.Describe, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Describe, "", new { @class = "text-danger" })*@
                                        </div>

                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Xuất xứ</label>
                                            @Html.TextBoxFor(x => x.Origin, new { @class = "form-control", @placeholder = "Xuất xứ", @type = "text" })
                                            @Html.ValidationMessageFor(x => x.Origin, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Ngày phát hành</label>
                                            @Html.TextBoxFor(x => x.TGPH, "{0:yyyy-MM-dd HH:mm}", new { @class = "form-control", @placeholder = "Thời gian phát hành", @type = "datetime-local" })
                                            @Html.ValidationMessageFor(x => x.TGPH, null, new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <!-- /.tab-pane -->
                                </div>
                                <button type="submit" class="btn btn btn-success">Lưu</button>
                                <a href="/admin/products" class="btn btn btn-danger">Quay lại</a>
                            }
                        </div>
                        <div class="col-md-8">
                            <h4>Ảnh sản phẩm</h4>
                            <p>---Thêm ảnh sản phẩm---</p>
                            <hr />
                            <table class="table table-bordered" width="100%">
                                <thead>
                                    <tr>
                                        <th>STT</th>
                                        <th>
                                            Ảnh
                                        </th>
                                        <th>
                                            Mặc định
                                        </th>
                                        <th>
                                            Ngày tạo
                                        </th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in productImage)
                                    {
                                        string ImagePath = "~/wwwroot/ImageProducts/" + item.ImagePath;
                                        <tr>
                                            <td>@(stt++)</td>
                                            <td>
                                                <img src="@Url.Content(ImagePath)" class="img img-thumbnail" width="250" height="450" />
                                            </td>
                                            @if (item.IsDefault == true)
                                            {
                                                <td>
                                                    Mặc định
                                                </td>
                                            }
                                            else
                                            {
                                                <td>
                                                </td>
                                            }

                                            <td>@Html.DisplayFor(model => item.CreateDate)</td>
                                            <td style="width:35px;">
                                                <a href="#" title="Xoá" data-toggle="modal" data-target="#deleteOD-@item.Id"><i class="far fa-trash-alt"></i></a>
                                            </td>
                                        </tr>

                                        <div class="modal fade" id="deleteOD-@item.Id" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" style="top:200px;">
                                            <div class="modal-dialog" role="document">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <h5 class="modal-title" id="exampleModalLabel">Bạn có chắc muốn xoá?</h5>
                                                        <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                                                            <span aria-hidden="true">×</span>
                                                        </button>
                                                    </div>
                                                    <div class="modal-body">Chọn "Xoá" để xoá</div>
                                                    <div class="modal-footer">
                                                        <button class="btn btn-secondary" type="button" data-dismiss="modal">Huỷ</button>
                                                        <a class="btn btn-danger" href="@Url.Action("DeleteImage","Products", new { id = item.Id, productId = Model.Id })">Xoá</a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }

                                </tbody>
                                <tfoot style="background-color:wheat;">
                                    <tr>
                                        @using (Html.BeginForm("AddImage", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                        {
                                            <th>
                                                <input name="productId" id="productId" value="@Model.Id" type="hidden" />
                                                @*<input name="caption" id="caption" value="@Model.MaSp" type="hidden" />*@
                                            </th>
                                            <th>
                                                <img id="output" class="img-rounded" alt="Ảnh" width="180" height="200" src="~/wwwroot/ImageProducts/no-image-news.png" />
                                                <p><label for="ufile" style="cursor:pointer">Chọn file ảnh</label></p>
                                                <input name="ImageFile" id="ufile" type="file" style="display:none" onchange="loadFile(event)" />
                                            </th>
                                            <th>
                                                <label for="isDefault">Chọn mặc định</label>
                                                <div class="checkbox">
                                                    <input checked="checked" class="check-box" data-val="true" id="isDefault" name="isDefault" type="checkbox" value="true">
                                                    <input name="isDefault" type="hidden" value="false">
                                                </div>
                                            </th>
                                            <th></th>
                                            <th><button type="submit" class="btn-primary"><i class="fas fa-plus-circle fa-2x"></i></button></th>
                                        }
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                    <!-- /.tab-content -->
                </div><!-- /.card-body -->

            </div>
        </div>
        <!-- /.card-body -->
        <div class="card-footer">
        </div>
        <!-- /.card-footer-->
    </div>
    @section scripts{
        <script>
            $(document).ready(function () {
                CKEDITOR.replace('txtDetail', {
                    customConfig: '/Content/ckeditor/config.js',
                    extraAllowedContent: 'span',
                });
            });
            function BrowseServer(field) {
                var finder = new CKFinder();
                finder.selectActionFunction = function (fileUrl) {
                    document.getElementById(field).value = fileUrl;
                };
                finder.popup();
            }
        </script>
        <script>
            var loadFile = function (event) {
                var image = document.getElementById('output')
                image.src = URL.createObjectURL(event.target.files[0])
            }
        </script>
        @Scripts.Render("~/bundles/jqueryval")
    }
